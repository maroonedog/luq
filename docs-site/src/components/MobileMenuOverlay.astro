---
export interface Props {
  navItems: Array<{ href: string; label: string }>;
}

const { navItems } = Astro.props;
const currentPath = Astro.url.pathname;
---

<!-- Mobile menu overlay - to be placed at body level -->
<div
  id="mobile-menu"
  class="fixed inset-0 z-[100] hidden"
  aria-hidden="true"
>
  <!-- Background overlay -->
  <div class="fixed inset-0 bg-black/50 backdrop-blur-sm" id="mobile-menu-backdrop"></div>
  
  <!-- Menu panel -->
  <div class="fixed right-0 top-0 h-full w-full max-w-xs bg-white dark:bg-luq-neutral-900 shadow-xl transform transition-transform duration-300 translate-x-full">
    <div class="flex h-full flex-col">
      <!-- Header -->
      <div class="flex items-center justify-between p-4 border-b border-luq-neutral-200 dark:border-luq-neutral-800">
        <span class="text-lg font-semibold luq-gradient-text">Menu</span>
        <button
          id="mobile-menu-close"
          type="button"
          class="p-2 rounded-lg hover:bg-luq-neutral-100 dark:hover:bg-luq-neutral-800 transition-colors"
          aria-label="Close menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <!-- Navigation -->
      <nav class="flex-1 overflow-y-auto p-4">
        <ul class="space-y-2">
          {navItems.map((item) => (
            <li>
              <a
                href={item.href}
                class={`
                  block px-4 py-3 rounded-lg font-medium transition-colors
                  ${currentPath.startsWith(item.href) 
                    ? 'bg-luq-purple-100 text-luq-purple-700 dark:bg-luq-purple-900/20 dark:text-luq-teal-400' 
                    : 'text-luq-neutral-700 dark:text-luq-neutral-300 hover:bg-luq-neutral-100 dark:hover:bg-luq-neutral-800'}
                `}
              >
                {item.label}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <!-- Footer -->
      <div class="p-4 border-t border-luq-neutral-200 dark:border-luq-neutral-800">
        <a
          href="https://github.com/maroonedog/luq"
          target="_blank"
          rel="noopener noreferrer"
          class="flex items-center justify-center space-x-2 px-4 py-3 rounded-lg bg-luq-neutral-100 dark:bg-luq-neutral-800 hover:bg-luq-neutral-200 dark:hover:bg-luq-neutral-700 transition-colors"
        >
          <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
            <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
          </svg>
          <span>GitHub</span>
        </a>
      </div>
    </div>
  </div>
</div>

<script>
  const toggle = document.getElementById('mobile-menu-toggle');
  const close = document.getElementById('mobile-menu-close');
  const menu = document.getElementById('mobile-menu');
  const backdrop = document.getElementById('mobile-menu-backdrop');
  const menuPanel = menu?.querySelector('.transform');
  
  function openMenu() {
    menu?.classList.remove('hidden');
    menuPanel?.classList.remove('translate-x-full');
    toggle?.setAttribute('aria-expanded', 'true');
    menu?.setAttribute('aria-hidden', 'false');
    document.body.style.overflow = 'hidden';
  }
  
  function closeMenu() {
    menuPanel?.classList.add('translate-x-full');
    setTimeout(() => {
      menu?.classList.add('hidden');
    }, 300);
    toggle?.setAttribute('aria-expanded', 'false');
    menu?.setAttribute('aria-hidden', 'true');
    document.body.style.overflow = '';
  }
  
  toggle?.addEventListener('click', openMenu);
  close?.addEventListener('click', closeMenu);
  backdrop?.addEventListener('click', closeMenu);
  
  // Close on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !menu?.classList.contains('hidden')) {
      closeMenu();
    }
  });
</script>
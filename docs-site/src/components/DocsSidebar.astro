---
export interface TableOfContentsItem {
  id: string;
  title: string;
  level: number; // 2 for h2, 3 for h3, etc.
}

export interface Props {
  currentPath: string;
  tableOfContents?: TableOfContentsItem[];
}

const { currentPath, tableOfContents } = Astro.props;

const sections = [
  {
    title: 'Getting Started',
    items: [
      { label: 'Introduction', href: '/docs/getting-started' },
      { label: 'Core Concepts', href: '/docs/core-concepts' },
      { label: 'Examples & Patterns', href: '/docs/examples' },
    ]
  },
  {
    title: 'Guides',
    items: [
      { label: 'Custom Plugins', href: '/docs/custom-plugins' },
      { label: 'Troubleshooting', href: '/docs/troubleshooting' },
    ]
  },
  {
    title: 'API Reference',
    items: [
      { label: 'Builder API', href: '/docs/api/builder' },
      { label: 'Validator API', href: '/docs/api/validator' },
      { label: 'Plugin Registry', href: '/docs/api/plugin-registry' },
    ]
  },
  {
    title: 'Plugins',
    items: [
      { label: 'Builder Generator', href: '/generator' },
    ]
  },
  {
    title: 'Tools',
    items: [
      { label: 'Builder Generator', href: '/generator' },
    ]
  },
  {
    title: 'Future',
    items: [
      { label: 'Roadmap', href: '/roadmap' },
    ]
  }
];
---

<!-- Mobile backdrop -->
<div 
  id="mobile-docs-backdrop" 
  class="lg:hidden fixed inset-0 bg-black/50 z-40 hidden"
></div>

<!-- Sidebar -->
<aside 
  id="docs-sidebar"
  class="
    fixed lg:sticky
    top-0 lg:top-16
    left-0
    w-80 lg:w-64
    h-screen lg:h-[calc(100vh-4rem)]
    bg-luq-neutral-50 dark:bg-luq-neutral-900
    border-r border-luq-neutral-200 dark:border-luq-neutral-800
    z-40 lg:z-auto
    transform -translate-x-full lg:translate-x-0
    transition-transform duration-300 ease-in-out
    overflow-y-auto
  "
>
  <!-- Mobile header -->
  <div class="lg:hidden flex justify-between items-center p-4 border-b border-luq-neutral-200 dark:border-luq-neutral-800">
    <h2 class="text-lg font-semibold text-luq-neutral-900 dark:text-luq-neutral-100">Documentation</h2>
    <button 
      id="mobile-docs-close"
      class="p-2 hover:bg-luq-neutral-200 dark:hover:bg-luq-neutral-700 rounded-lg transition-colors"
      aria-label="Close documentation menu"
    >
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>

  <nav class="p-6">
    <!-- Table of Contents (when available) -->
    {tableOfContents && tableOfContents.length > 0 && (
      <div class="mb-8">
        <h3 class="font-semibold text-sm uppercase tracking-wider text-luq-neutral-500 dark:text-luq-neutral-400 mb-3">
          On This Page
        </h3>
        <ul class="space-y-1" id="table-of-contents">
          {tableOfContents.map((item) => (
            <li class={`${item.level === 3 ? 'ml-3' : ''}`}>
              <a
                href={`#${item.id}`}
                class="toc-link block px-2 py-1 rounded-md text-sm transition-colors text-luq-neutral-600 dark:text-luq-neutral-400 hover:bg-luq-neutral-100 dark:hover:bg-luq-neutral-800 hover:text-luq-neutral-900 dark:hover:text-luq-neutral-100"
                data-target={item.id}
              >
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}
    
    {sections.map((section) => (
      <div class="mb-8">
        <h3 class="font-semibold text-sm uppercase tracking-wider text-luq-neutral-500 dark:text-luq-neutral-400 mb-3">
          {section.title}
        </h3>
        <ul class="space-y-2">
          {section.items.map((item) => {
            const isActive = currentPath === item.href;
            return (
              <li>
                <a
                  href={item.href}
                  class={`
                    block px-3 py-2 rounded-lg text-sm transition-colors
                    ${isActive
                      ? 'bg-luq-purple-100 text-luq-purple-700 dark:bg-luq-purple-900/30 dark:text-luq-teal-400 font-medium'
                      : 'text-luq-neutral-600 dark:text-luq-neutral-400 hover:bg-luq-neutral-100 dark:hover:bg-luq-neutral-800 hover:text-luq-neutral-900 dark:hover:text-luq-neutral-100'
                    }
                  `}
                >
                  {item.label}
                </a>
              </li>
            );
          })}
        </ul>
      </div>
    ))}
    
    <!-- Version selector -->
    <div class="mt-8 pt-8 border-t border-luq-neutral-200 dark:border-luq-neutral-800">
      <label class="text-xs font-semibold text-luq-neutral-500 dark:text-luq-neutral-400 uppercase tracking-wider">
        Version
      </label>
      <select class="mt-2 w-full px-3 py-2 rounded-lg border border-luq-neutral-300 dark:border-luq-neutral-700 bg-white dark:bg-luq-neutral-800 text-sm">
        <option>v0.1.0-alpha</option>
      </select>
    </div>
  </nav>
</aside>

<style>
  /* Custom scrollbar for sidebar */
  aside::-webkit-scrollbar {
    @apply w-1.5;
  }
  
  aside::-webkit-scrollbar-track {
    @apply bg-transparent;
  }
  
  aside::-webkit-scrollbar-thumb {
    @apply bg-luq-neutral-300 dark:bg-luq-neutral-700 rounded-full;
  }
  
  aside::-webkit-scrollbar-thumb:hover {
    @apply bg-luq-neutral-400 dark:bg-luq-neutral-600;
  }
  
  /* Active TOC link styles */
  .toc-link.active {
    @apply bg-luq-purple-100 text-luq-purple-700 dark:bg-luq-purple-900/30 dark:text-luq-teal-400 font-medium;
  }
</style>

<script>
  function initializeMobileDocsSidebar() {
    const menuButton = document.getElementById('mobile-docs-menu-button');
    const closeButton = document.getElementById('mobile-docs-close');
    const sidebar = document.getElementById('docs-sidebar');
    const backdrop = document.getElementById('mobile-docs-backdrop');
    
    function openSidebar() {
      if (sidebar) {
        sidebar.classList.remove('-translate-x-full');
        sidebar.classList.add('translate-x-0');
      }
      if (backdrop) {
        backdrop.classList.remove('hidden');
      }
      document.body.style.overflow = 'hidden';
    }
    
    function closeSidebar() {
      if (sidebar) {
        sidebar.classList.add('-translate-x-full');
        sidebar.classList.remove('translate-x-0');
      }
      if (backdrop) {
        backdrop.classList.add('hidden');
      }
      document.body.style.overflow = '';
    }
    
    // Event listeners
    menuButton?.addEventListener('click', openSidebar);
    closeButton?.addEventListener('click', closeSidebar);
    backdrop?.addEventListener('click', closeSidebar);
    
    // Close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeSidebar();
      }
    });
    
    // Close when clicking nav links on mobile
    const navLinks = sidebar?.querySelectorAll('nav a');
    navLinks?.forEach(link => {
      link.addEventListener('click', () => {
        if (window.innerWidth < 1024) {
          closeSidebar();
        }
      });
    });
    
    // Handle resize
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 1024) {
        closeSidebar();
      }
    });
  }

  function initializeTableOfContents() {
    const tocLinks = document.querySelectorAll('.toc-link');
    if (tocLinks.length === 0) return;
    
    const headings = Array.from(tocLinks).map(link => {
      const targetId = link.getAttribute('data-target');
      return targetId ? document.getElementById(targetId) : null;
    }).filter((el): el is HTMLElement => el !== null);
    
    if (headings.length === 0) return;
    
    const observer = new IntersectionObserver((entries) => {
      let activeId = '';
      let largestRatio = 0;
      
      entries.forEach(entry => {
        if (entry.isIntersecting && entry.intersectionRatio > largestRatio) {
          largestRatio = entry.intersectionRatio;
          activeId = entry.target.id;
        }
      });
      
      if (!activeId) {
        let closestHeading: HTMLElement | null = null;
        let closestDistance = Infinity;
        
        headings.forEach(heading => {
          if (!heading) return;
          const rect = heading.getBoundingClientRect();
          const distance = Math.abs(rect.top);
          if (distance < closestDistance) {
            closestDistance = distance;
            closestHeading = heading;
          }
        });
        
        if (closestHeading) {
          activeId = (closestHeading as HTMLElement).id;
        }
      }
      
      tocLinks.forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('data-target') === activeId) {
          link.classList.add('active');
        }
      });
    }, {
      rootMargin: '-20% 0% -60% 0%',
      threshold: [0, 0.25, 0.5, 0.75, 1]
    });
    
    headings.forEach(heading => {
      if (heading) observer.observe(heading);
    });
    
    tocLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('data-target');
        const targetElement = targetId ? document.getElementById(targetId) : null;
        
        if (targetElement) {
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
          
          setTimeout(() => {
            history.pushState(null, '', `#${targetId}`);
          }, 100);
        }
      });
    });
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', () => {
    initializeMobileDocsSidebar();
    initializeTableOfContents();
  });
  
  // Re-initialize on navigation
  document.addEventListener('astro:page-load', () => {
    initializeMobileDocsSidebar();
    initializeTableOfContents();
  });
</script>